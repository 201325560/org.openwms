<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * openwms.org, the Open Warehouse Management System.
 * Copyright (C) 2014 Heiko Scherrer
 *
 * This file is part of openwms.org.
 *
 * openwms.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as 
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * openwms.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software. If not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
-->
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <debug />

    <beans:bean id="unauthorizedEntryPoint" class="org.openwms.client.security.UnauthorizedEntryPoint" />
    <beans:bean class="org.openwms.client.security.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
        <beans:constructor-arg ref="authenticationManager" />
        <beans:constructor-arg ref="userDetailsService" />
    </beans:bean>

    <global-method-security pre-post-annotations="enabled" />

    <http pattern="/static/**" security="none" />
    <http pattern="/images/**" security="none" />

    <http use-expressions="true" realm="OPENWMS" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
        authentication-manager-ref="authenticationManager">
        <custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
        <intercept-url pattern="/sec/**" access="permitAll" />
        <intercept-url pattern="/secure/extreme/**" access="hasRole('supervisor')" />
        <intercept-url pattern="/views/**" access="isAuthenticated()" />
        <intercept-url pattern="/api/**" method="GET" access="isAuthenticated()" />
        <intercept-url pattern="/api/**" method="PUT" access="isAuthenticated()" />
        <intercept-url pattern="/api/**" method="POST" access="isAuthenticated()" />
        <intercept-url pattern="/api/**" method="DELETE" access="isAuthenticated()" />
        <intercept-url pattern="/#/**" access="isAuthenticated()" />
    </http>

    <!--beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/-->

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService" />
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="passwordEncoder">
                <salt-source ref="saltSource" />
            </password-encoder>
        </authentication-provider>
    </authentication-manager>

</beans:beans>