<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
/*
 * openwms.org, the Open Warehouse Management System.
 * Copyright (C) 2014 Heiko Scherrer
 *
 * This file is part of openwms.org.
 *
 * openwms.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * openwms.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software. If not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="onCreate()">
	
    <mx:Metadata>
        [Name]
        [ResourceBundle("appMain")]
    </mx:Metadata>

    <mx:Script>
        <![CDATA[
            import mx.managers.PopUpManager;

            import org.granite.tide.spring.Identity;

            import org.openwms.web.flex.client.view.dialogs.LoginView;
            import org.openwms.web.flex.client.event.ApplicationEvent;
            import org.openwms.web.flex.client.util.I18nUtil;
            
            [Inject]
            [Bindable]
            /**
             * Injected Granite identity object.
             */
            public var identity : Identity;
            
            private var _loginView : LoginView;
        
            /**
             * Whats going on? On logout or lock event we show this dialogue.
             *
             * @param event Unused
             */
            public function onCreate(event : ApplicationEvent = null) : void {
                if (!identity.loggedIn) {
                    showLoginDialog(I18nUtil.trans(I18nUtil.APP_MAIN, 'txt_login_not_logged_in'));
                }
            }
            
            private function showLoginDialog(text : String) : void {
                _loginView = LoginView(PopUpManager.createPopUp(this, LoginView, true));
                _loginView.loginMessageText = text;
                PopUpManager.centerPopUp(_loginView);
            }
            
        ]]>
    </mx:Script>
    
</mx:Canvas>
