<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * openwms.org, the Open Warehouse Management System.
 *
 * This file is part of openwms.org.
 *
 * openwms.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as 
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * openwms.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software. If not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:o="org.openwms.web.flex.client.component.*" width="100%"
	height="100%" backgroundColor="#C2DAEF" creationComplete="init()">
	<mx:Script>
					<![CDATA[
						import mx.controls.dataGridClasses.DataGridColumn;
						import mx.controls.Alert;
						import mx.utils.ArrayUtil;
						import org.openwms.common.domain.*;
						import mx.collections.ArrayCollection;
						import org.openwms.web.flex.client.common.event.LoadLocationGroupsEvent;
						import org.openwms.web.flex.client.common.business.LocationGroupDelegate;
						import mx.controls.List;
						import mx.events.ListEvent;
						import org.openwms.web.flex.client.model.ModelLocator;
						[Bindable]
						private var modelLocator:ModelLocator = ModelLocator.getInstance();
						[Bindable]
						private var selectedRow:Location;
						[Bindable]
						private var listLocationGroups:ArrayCollection = new ArrayCollection();
						
						private function init():void {
							new LoadLocationGroupsEvent(LoadLocationGroupsEvent.LOAD_ALL_LOCATION_GROUPS).dispatch();
						}
						
						private function onRowClick( event:ListEvent ):void {
							var selected:Location = (event.currentTarget.selectedItem) as Location;
							selectedRow = (event.currentTarget.selectedItem) as Location;
							if (selectedRow.locationGroup != null) {
								locationGroupCB.selectedIndex = listLocationGroups.getItemIndex(selectedRow.locationGroup.name);
							}
						}
						
						private function getListAsComboBoxList( list:ArrayCollection ):ArrayCollection {
							if (listLocationGroups.length == 0) {
								var locationGroup:LocationGroup;
								for (var i:uint = 0; i < list.length; i++) {
									locationGroup = list[i];
									listLocationGroups.addItem(locationGroup.name);
								}
							}
							return listLocationGroups;
						}
						
						private function locationIdField(item:Object, dg:DataGridColumn):String
						{
							return item.locationId[dg.dataField];
						}
						private function locationGroupField(item:Object, dg:DataGridColumn):String
						{
							if(item.locationGroup != null) {
								return item.locationGroup[dg.dataField];
							}
      						return "NULL";
						}
					]]>
	</mx:Script>
	<mx:HBox x="10" y="10" verticalAlign="middle" backgroundColor="#C6FFC7" width="95%">
	    <mx:Label x="10" y="10" text="Locations" fontSize="24"/>
	    <mx:VRule height="10"/>
	    <mx:Button id="addLocationTypeBtn" buttonMode="true" mouseChildren="false" toolTip="Create a new Location Type" icon="@Embed(source='/assets/images/Location--Add.png')" />
	    <mx:VRule height="10"/>
	    <mx:Button id="removeLocationTypeBtn" buttonMode="true" mouseChildren="false" toolTip="Delete an existing Location Type" icon="@Embed(source='/assets/images/Location--Delete.png')" />
	</mx:HBox>
	<mx:HRule x="9" y="53" width="95%"/>
	<mx:HBox height="100%" width="95%" x="10" y="63">
		<mx:DataGrid id="locationsList" allowMultipleSelection="true" sortableColumns="true" height="100%" width="100%"
			dataProvider="{modelLocator.allLocations}" itemClick="onRowClick(event)" >
			<mx:columns>
				<mx:DataGridColumn dataField="area" labelFunction="locationIdField" editable="false" width="50">
					<mx:headerRenderer>
						<mx:Component>
							<mx:Label text="Area" styleName="headerArea" />
						</mx:Component>
					</mx:headerRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="Aisle" dataField="aisle" labelFunction="locationIdField" editable="false"
					width="50" />
				<mx:DataGridColumn headerText="X" dataField="x" labelFunction="locationIdField" editable="false"
					width="50" />
				<mx:DataGridColumn headerText="Y" dataField="y" labelFunction="locationIdField" editable="false"
					width="50" />
				<mx:DataGridColumn headerText="Z" dataField="z" labelFunction="locationIdField" editable="false"
					width="50" />
				<mx:DataGridColumn headerText="Location Group" dataField="name" labelFunction="locationGroupField"
					editable="false" />
				<mx:DataGridColumn headerText="Description" dataField="description" editable="true" />
				<mx:DataGridColumn headerText="Counting Active" dataField="countingActive" editable="true">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox />
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="Incoming Active" dataField="incomingActive" editable="true">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox />
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="Outgoing Active" dataField="outgoingActive" editable="true">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox />
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="Last Access" dataField="lastAccess" editable="false" />
			</mx:columns>
		</mx:DataGrid>
    <mx:Canvas id="locationDetailsPnl" x="618" y="63" backgroundColor="#C6FFC7">
    
        <mx:Label text="Location" fontWeight="bold" width="130" textAlign="right" x="10" y="12"/>
        <mx:Text text="{selectedRow.locationId}" width="100%" fontWeight="bold"  x="148" y="12"/>

        <mx:Label text="Description" width="130" textAlign="right" x="10" y="38"/>
        <mx:TextArea text="{selectedRow.description}" width="200" height="64" x="148" y="37"/>
        <mx:HRule x="10" y="109" width="360"/>

        <mx:Label text="Location Group" width="130" textAlign="right" x="10" y="119" />
        <mx:ComboBox id="locationGroupCB" dataProvider="{getListAsComboBoxList(modelLocator.allLocationGroups)}" width="200"  x="148" y="117"/>
        <mx:CheckBox x="148" y="147" label="Counting Active in Location Group" selected="{selectedRow.locationGroupCountingActive}" />
        <mx:HRule x="10" y="177" width="360"/>
        
        <mx:Label text="Location Type" width="130" textAlign="right" x="10" y="187" />
        <mx:ComboBox id="locationTypeCmb" dataProvider="{getListAsComboBoxList(modelLocator.allLocationGroups)}" width="200" x="148" y="185"/>
        <mx:Text x="148" y="217" text="{selectedRow.locationType.description}" width="200" />
        <mx:HRule x="10" y="253" width="360"/>
        
        <mx:Label text="Max. Transport Units" width="130" textAlign="right" x="10" y="263" />
        <mx:TextInput id="noMaxTransportUnitsTxt" text="{selectedRow.noMaxTransportUnits}" width="40"  x="148" y="261"/>

        <mx:Label text="Check State" width="130" textAlign="right" x="10" y="289" />
        <mx:Text id="checkStateTxt" text="{selectedRow.checkState}" width="200" x="148" y="289"/>

        <mx:Label text="PLC State" width="130" textAlign="right" x="10" y="315" />
        <mx:TextInput id="plcStateTxt" text="{selectedRow.plcState}"  width="40" x="148" y="313"/>

        <mx:CheckBox x="148" y="343" label="Counting Active" selected="{selectedRow.countingActive}" />
        <mx:CheckBox x="148" y="373" label="Incoming Active" selected="{selectedRow.incomingActive}" />
        <mx:CheckBox x="148" y="403" label="Outgoing Active" selected="{selectedRow.outgoingActive}" />
        <mx:CheckBox x="148" y="433" label="Considered in Allocation" selected="{selectedRow.consideredInAllocation}" />
        
        <mx:Label x="72" y="463" text="Last Access" />
        <mx:Text x="148" y="463" text="{selectedRow.lastAccess}"  width="200"/>

        <mx:Label x="80" y="489" text="Messages" />
        <mx:TextArea x="148" y="488" width="200" height="64" />

    </mx:Canvas>
    </mx:HBox>
</mx:Canvas>
