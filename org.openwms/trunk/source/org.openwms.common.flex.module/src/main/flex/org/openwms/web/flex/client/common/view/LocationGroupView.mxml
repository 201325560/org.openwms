<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * openwms.org, the Open Warehouse Management System.
 *
 * This file is part of openwms.org.
 *
 * openwms.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as 
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * openwms.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software. If not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:x="org.openwms.web.flex.client.component.*" width="100%" height="100%" backgroundColor="#C2DAEF" show="onShow();">

    <mx:Metadata>
        [Name("locationGroupView")]
        [ManagedEvent(name="LOAD_ALL_LOCATIONS")]
        [ManagedEvent(name="LOAD_ALL_LOCATION_GROUPS")]
    </mx:Metadata>

    <!-- Scripts -->
    <mx:Script>
        <![CDATA[
            import org.openwms.common.domain.LocationGroup;
            import org.openwms.web.flex.client.event.SwitchScreenEvent;
        	import org.openwms.web.flex.client.model.TreeDataDescriptor;
        	import org.openwms.web.flex.client.common.event.LocationGroupEvent;
            import org.openwms.web.flex.client.common.event.LocationEvent;
            import org.openwms.web.flex.client.common.model.CommonModelLocator;
            import mx.collections.ArrayCollection;

	        [In]
	        [Bindable]
	        public var commonModelLocator:CommonModelLocator;

            [Bindable]
            private var selectedLocationGroup : LocationGroup;

            [Bindable]
            private var selectedParent : String;

            [Bindable]
            private var selectedLocations : ArrayCollection = new ArrayCollection();

            private function onShow() : void {
                if (commonModelLocator.allLocationGroups.length == 0) {
                    dispatchEvent(new LocationGroupEvent(LocationGroupEvent.LOAD_ALL_LOCATION_GROUPS));
                }
                if (commonModelLocator.allLocations.length == 0) {
                    dispatchEvent(new LocationEvent(LocationEvent.LOAD_ALL_LOCATIONS));
                }
            }
            
            private function locationGroupLabel(item : Object) : String {
                if (item != null) {
                    if (item.getData() != null) {
                        return item.getData()['name'];
                    } else {
                        return "";
                    }
                } else {
                    return "";
                }
            }

            public function onTreeClick(event : Event) : void {
                selectedLocationGroup = (event.target.selectedItem.getData()) as LocationGroup;
                selectedParent = findLocationGroup();
                showLocations();
            }

            private function showLocations() : void {
                var locations : ArrayCollection = commonModelLocator.allLocations;
                selectedLocations.removeAll();
                for (var i : uint = 0; i < locations.length; i++) {
                    if (locations[i].locationGroup == null) {
                        continue;
                    }
                    trace("Moving" + locations[i].locationGroup.id);
                    if (locations[i].locationGroup.id == selectedLocationGroup.id) {
                        selectedLocations.addItem(locations[i]);
                    }
                }
            }

            private function findLocationGroup() : String {
                if (selectedLocationGroup.parent != null) {
                    return selectedLocationGroup.parent.name;
                } else {
                    return "NULL";
                }
            }

            private function locationIdField(item : Object, dg : DataGridColumn) : String {
                return item.locationId[dg.dataField];
            }

            private function locationGroupField(item : Object, dg : DataGridColumn) : String {
                if (item.locationGroup != null) {
                    return item.locationGroup[dg.dataField];
                }
                return "NULL";
            }

            private function refresh() : void {
                var event : SwitchScreenEvent = new SwitchScreenEvent(SwitchScreenEvent.SHOW_LOCATIONGROUP_VIEW);
                event.dispatch();
            }
        ]]>
    </mx:Script>

    <mx:HBox x="10" y="10" verticalAlign="middle" backgroundColor="#C6FFC7" width="95%">
        <mx:Label x="10" y="10" text="Location Groups" fontSize="24"/>
        <mx:VRule height="10"/>
        <mx:Button id="refreshBtn" buttonMode="true" mouseChildren="false" toolTip="Refresh Location Groups" icon="@Embed(source='assets/images/icons/refresh.png')" click="refresh()"/>
    </mx:HBox>
    <mx:HRule x="10" y="53" width="95%"/>
    <mx:HBox x="10" y="63" verticalAlign="top" height="100%" width="95%">

        <mx:Tree id="myTree" showRoot="false" width="236" dataProvider="{commonModelLocator.locationGroupTree}" dataDescriptor="{new TreeDataDescriptor()}" labelFunction="locationGroupLabel" change="onTreeClick(event)" height="95%">
        </mx:Tree>
        <mx:Canvas width="100%" height="95%">
            <x:XPanel x="258" y="0" width="100%" height="300" layout="absolute" title="Details" titleIcon="@Embed(source='/assets/images/LocationGroup.png')" toolTipBtn1="Refresh" onClickBtn1="refresh" iconBtn1="@Embed(source='assets/images/icons/refresh.png')">
                <mx:CheckBox x="190" y="146" label="Infeed allowed"/>
                <mx:CheckBox x="305" y="146" label="Outfeed allowed"/>
                <mx:CheckBox x="190" y="176" label="Counting active"/>
                <mx:HBox x="10" y="10" width="95%" height="25" borderStyle="solid" alpha="0.5" backgroundColor="#C2DAEF">
                    <mx:Label text="Location Group" fontSize="16" textDecoration="normal" width="170" textAlign="right" fontWeight="bold"/>
                    <mx:Label text="{selectedLocationGroup.name}" fontSize="16" textDecoration="normal" width="100%" toolTip="{selectedLocationGroup.name}"/>
                </mx:HBox>
                <mx:HBox x="10" y="43" width="95%" height="18">
                    <mx:Label text="Parent Location Group" width="170" textAlign="right"/>
                    <mx:Label text="{selectedParent}" width="100%"/>
                </mx:HBox>
                <mx:NumericStepper x="190" y="206" value="{selectedLocationGroup.maxFillLevel}" minimum="0" maximum="100" />
                <mx:Label x="10" y="69" text="Description" textAlign="right" width="170"/>
                <mx:Label x="10" y="120" text="Group Type" textAlign="right" width="170"/>
                <mx:Label x="10" y="234" text="System Code" textAlign="right" width="170"/>
                <mx:Label x="10" y="208" text="Maximum Fill Level" textAlign="right" width="170"/>
                <mx:TextArea x="190" y="68" width="200"/>
                <mx:Label text="{selectedLocationGroup.groupType}" width="100%" x="190" y="120"/>
                <mx:Label text="{selectedLocationGroup.systemCode}" width="100%" x="188" y="234"/>
            </x:XPanel>
            <mx:Panel width="250" height="250" layout="absolute" x="0" y="0" title="Fill Level">
                <!--
                     <mx:PieChart x="0" y="0" id="piechart1" width="100%" height="100%">
                     <mx:series>
                     <mx:PieSeries displayName="Series 1"/>
                     </mx:series>
                     </mx:PieChart>
                -->
            </mx:Panel>
            <mx:DataGrid id="locationsList" allowMultipleSelection="true" sortableColumns="true" x="0" y="351" width="100%" dataProvider="{selectedLocations}" height="100%">
                <mx:columns>
                    <mx:DataGridColumn dataField="area" labelFunction="locationIdField" editable="false" width="50">
                        <mx:headerRenderer>
                            <mx:Component>
                                <mx:Label text="Area" styleName="headerArea"/>
                            </mx:Component>
                        </mx:headerRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="Aisle" dataField="aisle" labelFunction="locationIdField" editable="false" width="50"/>
                    <mx:DataGridColumn headerText="X" dataField="x" labelFunction="locationIdField" editable="false" width="50"/>
                    <mx:DataGridColumn headerText="Y" dataField="y" labelFunction="locationIdField" editable="false" width="50"/>
                    <mx:DataGridColumn headerText="Z" dataField="z" labelFunction="locationIdField" editable="false" width="50"/>
                    <mx:DataGridColumn headerText="Location Group" dataField="name" labelFunction="locationGroupField" editable="false"/>
                    <mx:DataGridColumn headerText="Description" dataField="description" editable="true"/>
                    <mx:DataGridColumn headerText="Counting Active" dataField="countingActive" editable="true">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:CheckBox/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="Incoming Active" dataField="incomingActive" editable="true">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:CheckBox/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="Outgoing Active" dataField="outgoingActive" editable="true">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:CheckBox/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="Last Access" dataField="lastAccess" editable="false"/>
                </mx:columns>
            </mx:DataGrid>
            <mx:HBox verticalAlign="middle" backgroundColor="#C6FFC7" width="100%" x="0" y="318" backgroundAlpha="1.0">
                <mx:Label text="Locations" fontSize="16"/>
                <mx:VRule height="10"/>
            </mx:HBox>
        </mx:Canvas>
    </mx:HBox>
</mx:Canvas>
