<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * openwms.org, the Open Warehouse Management System.
 *
 * This file is part of openwms.org.
 *
 * openwms.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as 
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * openwms.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software. If not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:business="org.openwms.web.flex.client.business.*"
	xmlns:control="org.openwms.web.flex.client.control.*" xmlns:view="org.openwms.web.flex.client.view.*" layout="absolute"
	backgroundGradientAlphas="[1.0, 1.0]" backgroundGradientColors="[#FFFFFF, #FFFFFF]" creationComplete="init()">

	<!-- Styles -->
	<mx:Style source="/assets/css/main.css" />
	<mx:Style source="/assets/css/styles.css" />

	<!-- Scripts -->
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import org.openwms.web.flex.client.components.IApplicationModule;
			import mx.events.ModuleEvent;
			import mx.modules.IModuleInfo;
			import mx.modules.ModuleManager;
			import mx.controls.Alert;
			import org.openwms.web.flex.client.model.ModelLocator;
			import org.openwms.web.flex.client.event.SwitchScreenEvent;
			import mx.events.MenuEvent;
            import org.granite.rpc.remoting.mxml.SecureRemoteObject;
            import org.granite.events.SecurityEvent;
            
			[Bindable]
			private var modelLocator:ModelLocator = ModelLocator.getInstance();
			[Bindable]
            private var srv:SecureRemoteObject = null;
            
            private var mInfo_common:IModuleInfo;
            private var mInfo_tms:IModuleInfo;
            private var mInfo_wms:IModuleInfo;
            private var mInfo_app:IModuleInfo;

			public function init():void {
                srv = new SecureRemoteObject("userService");
                srv.login();
                /*
                srv.source = "personService";
                srv.channelSet = new ChannelSet();
                srv.channelSet.addChannel(new AMFChannel("graniteamf", "http://{server.name}:{server.port}/graniteds-spring/graniteamf/amf"));
                srv.showBusyCursor = true;
                var operation:Operation = new Operation();
                operation.name = "findAllPersons";
                operation.addEventListener(ResultEvent.RESULT, onFindAllPersonsResult);
                srv.operations = {findAllPersons: operation};
                srv.addEventListener(FaultEvent.FAULT, onRemoteFault);
                srv.addEventListener(SecurityEvent.ALL, onSecurityEvent);
                srv.findAllPersons();
                */
			}
			
            public function onSecurityEvent(event:SecurityEvent):void {
                trace("onSecurityEvent: " + event);
                switch (event.type) {
                case SecurityEvent.INVALID_CREDENTIALS:
                    loginView.loginMessageText = "Invalid username or password";
                    loginView.authenticated = false;
                    break;
                case SecurityEvent.NOT_LOGGED_IN:
                    srv.logout();
                    loginView.loginMessageText = "";
                    loginView.authenticated = false;
                    break;
                case SecurityEvent.SESSION_EXPIRED:
                    srv.logout();
                    loginView.loginMessageText = "Session expired";
                    loginView.authenticated = false;
                    break;
                case SecurityEvent.ACCESS_DENIED:
                    Alert.show("You don't have required rights to execute this action");
                    break;
                }
            }

			private function onMenuChange(event:MenuEvent):void {
				trace("Switching to view:"+event.item.@action);
				new SwitchScreenEvent(event.item.@action).dispatch();
			}
			
            public function login(username:String, password:String):void {
                srv.setCredentials(username, password);
                srv.login();
            }

            public function logout():void {
                srv.logout();
                loginView.authenticated = false;
                loginView.loginMessageText = "";
            }
            
            private function detectModules():void {
            	mInfo_app = ModuleManager.getModule('openwms_app.swf');
            	mInfo_app.addEventListener(ModuleEvent.READY, moduleLoaded);
            	mInfo_common = ModuleManager.getModule('openwms_common.swf');
                mInfo_common.addEventListener(ModuleEvent.READY, moduleLoaded);
            	mInfo_tms = ModuleManager.getModule('openwms_tms.swf');
                mInfo_tms.addEventListener(ModuleEvent.READY, moduleLoaded);
            	mInfo_wms = ModuleManager.getModule('openwms_wms.swf');
                mInfo_wms.addEventListener(ModuleEvent.READY, moduleLoaded);
            }
            
            private function moduleLoaded(e:ModuleEvent):void {
            	trace("Loaded Module:"+e.module.url);
            }
            
            private function populateMenuBar(tempMenu:ArrayCollection, module:IApplicationModule):void {
            	
                
            }


		]]>
	</mx:Script>

	<!-- Services -->
	<business:Services />

	<control:MainController />

	<mx:VBox height="100%" width="100%" verticalGap="0" backgroundColor="#C2DAEF">
		<mx:Canvas width="100%" height="66" backgroundImage="@Embed(source='openwms_banner.jpg')" backgroundSize="100%">
			<mx:Image source="@Embed('/assets/images/openwms_header.png')" />
		</mx:Canvas>
		<mx:Canvas width="100%" height="25" backgroundImage="@Embed(source='breadcrumbs.jpg')" backgroundSize="100%">
			<mx:MenuBar id="mainMenuBar" labelField="@label" itemClick="onMenuChange(event)" color="#FFFF1B" fontWeight="bold" fontSize="12" alpha="0.0">
				<mx:XMLList>
					<menuitem label="OpenWMS">
						<menuitem label="Connect ..." enabled="false" />
						<menuitem label="Logout" enabled="false" />
					</menuitem>
					<menuitem label="Administration">
						<menuitem label="Users" action="{SwitchScreenEvent.SHOW_LOCATION_VIEW}" />
						<menuitem label="Roles" action="{SwitchScreenEvent.SHOW_LOCATION_VIEW}" />
						<menuitem label="Security" action="{SwitchScreenEvent.SHOW_LOCATION_VIEW}" />
					</menuitem>
					<menuitem label="Transport Management">
						<menuitem label="Transport Orders" enabled="false" />
					</menuitem>
					<menuitem label="Warehouse">
						<menuitem label="Ordering" enabled="false" />
						<menuitem label="Receiving" enabled="false" />
					</menuitem>
					<menuitem label="Stock Configuration">
						<menuitem label="Transport Units" action="{SwitchScreenEvent.SHOW_TRANSPORTUNIT_VIEW}" />
                        <menuitem label="Locations" action="{SwitchScreenEvent.SHOW_LOCATION_VIEW}" />
						<menuitem label="Users" action="{SwitchScreenEvent.SHOW_USER_MGMT_VIEW}" />
						<menuitem label="Location Groups" action="{SwitchScreenEvent.SHOW_LOCATIONGROUP_VIEW}" />
					</menuitem>
					<menuitem label="Monitoring">
						<menuitem label="Reports" enabled="false" />
					</menuitem>
				</mx:XMLList>
			</mx:MenuBar>
		</mx:Canvas>
		<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<mx:ViewStack id="myViewStack" selectedIndex="{loginView.authenticated ? modelLocator.mainViewStackIndex : 0}">
            <view:LoginView id="loginView" onLogin="login" cornerRadius="20" borderStyle="solid" alpha="1.0" borderThickness="3"/>
			<view:LocationView />
			<view:LocationGroupView />
			<view:UserManagementView />
			<view:TransportUnitView />
		</mx:ViewStack>
        </mx:HBox>
	</mx:VBox>

</mx:Application>
