<?xml version="1.0" encoding="utf-8"?>
<!--
     /*
     * openwms.org, the Open Warehouse Management System.
     *
     * This file is part of openwms.org.
     *
     * openwms.org is free software: you can redistribute it and/or modify
     * it under the terms of the GNU Lesser General Public License as
     * published by the Free Software Foundation, either version 3 of the
     * License, or (at your option) any later version.
     *
     * openwms.org is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     * GNU Lesser General Public License for more details.
     *
     * You should have received a copy of the GNU Lesser General Public
     * License along with this software. If not, write to the Free
     * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
     * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
     */
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" styleName="frameContainerSkin" creationComplete="init()" implements="org.openwms.web.flex.client.IObserver">

    <mx:Metadata>
        [Name]
        [ManagedEvent(name="ADD_USER")]
        [ManagedEvent(name="SAVE_USER")]
        [ManagedEvent(name="DELETE_USER")]
        [ManagedEvent(name="LOAD_ALL_USERS")]
    </mx:Metadata>

    <mx:Script>
        <![CDATA[
            import mx.effects.Blur;
            import flash.utils.ByteArray;
            import mx.events.ValidationResultEvent;
            import mx.managers.PopUpManager;
            import mx.controls.Alert;
            import mx.core.BitmapAsset;
            import mx.validators.RegExpValidationResult;
            import org.openwms.common.domain.system.usermanagement.User;
            import org.openwms.common.domain.system.usermanagement.UserDetails$SEX;
            import org.openwms.web.flex.client.event.UserEvent;
            import org.openwms.web.flex.client.helper.UserHelper;
            import org.openwms.web.flex.client.model.ModelLocator;
            import org.openwms.web.flex.client.view.dialogs.FileUploadDialog;
            import org.openwms.web.flex.client.view.dialogs.ChangePasswordDialog;

            [Bindable]
            [Embed(source="/assets/images/userDefaultUniSex.jpg")]
            private var uniSexImage : Class;
            [Bindable]
            [Embed(source="/assets/images/userDefaultMan.jpg")]
            private var manImage : Class;
            [Bindable]
            [Embed(source="/assets/images/userDefaultWoman.jpg")]
            private var womanImage : Class;
            [In]
            [Bindable]
            public var modelLocator : ModelLocator;

            [Observer("userSelectionChanged")]
            private function init() : void
            {
                userImg.source = getUserImage();
                shadowImage();
            }
            
            public function notify():void
            {
            	refresh();
            }

            private function showFileUploadDialog() : void
            {
                if (modelLocator.selectedUser == null)
                {
                    Alert.show("Select a User first");
                    return;
                }
                if (isNaN(modelLocator.selectedUser.id))
                {
                    Alert.show("Please save the User first to add an Image");
                    return;
                }
                var pop1 : FileUploadDialog = FileUploadDialog(PopUpManager.createPopUp(this, FileUploadDialog, true));
                pop1.callback = this;
                PopUpManager.centerPopUp(pop1);
            }

            private function fireSaveUserEvent() : void
            {
                if (stringVal.validate().type == ValidationResultEvent.VALID &&
                    checkExpirationDate())
                {
                    dispatchEvent(new UserEvent(UserEvent.SAVE_USER));
                
                }
            }
            
            private function checkExpirationDate():Boolean
            {
            	if (expirationDt.text == null || expirationDt.text == "")
            	{
            		modelLocator.selectedUser.expirationDate = null;
            		return true;
            	}
            	if (dateVal.validate().type == ValidationResultEvent.VALID)
                {
                   return true;
                }
                return false;
            }

            private function refresh() : void
            {
                dispatchEvent(new UserEvent(UserEvent.LOAD_ALL_USERS));
            }

            private function showChangePasswordDialog() : void
            {
                var pop : ChangePasswordDialog = ChangePasswordDialog(PopUpManager.createPopUp(this, ChangePasswordDialog, true));
                PopUpManager.centerPopUp(pop);
            }

            private function setEditable(event : Event) : void
            {
                event.currentTarget.editable = true;
            }

            private function getUserImage() : BitmapAsset
            {
                var asset : BitmapAsset;
                if (modelLocator.selectedUser != null)
                {
                    var user : User = modelLocator.selectedUser;
                    if (UserHelper.haveDetails(user))
                    {
                        if (user.userDetails.sex == UserDetails$SEX.MALE)
                        {
                            asset = new manImage() as BitmapAsset;
                        } else if (user.userDetails.sex == UserDetails$SEX.FEMALE)
                        {
                            asset = new womanImage() as BitmapAsset;
                        } else
                        {
                            asset = new uniSexImage() as BitmapAsset;
                        }
                    }
                    else
                    {
                        asset = new uniSexImage() as BitmapAsset;
                    }
                }
                else
                {
                    asset = new uniSexImage() as BitmapAsset;
                }
                return asset;
            }

            private function shadowImage() : void
            {
                var filter : DropShadowFilter = new DropShadowFilter();
                filter.blurX = 4;
                filter.blurY = 4;
                filter.quality = 2;
                filter.alpha = 0.5;
                filter.angle = 45;
                filter.color = 0x202020;
                filter.distance = 6;
                filter.inner = false;
                userImg.filters = [filter];
            }
            
        ]]>
    </mx:Script>

    <!--
         <mx:RegExpValidator source="{usernameTi}" property="text" flags="gmi" valid="fireSaveUserEvent()"
         expression="_*" noMatchError="Username not allowed!" trigger="{saveUserBtn}" triggerEvent="click" />
    -->

    <mx:Binding source="usernameTi.text" destination="modelLocator.selectedUser.username"/>
    <mx:Binding source="fullnameTi.text" destination="modelLocator.selectedUser.fullname"/>
    <mx:Binding source="descriptionTi.text" destination="modelLocator.selectedUser.userDetails.description"/>
    <mx:Binding source="phoneNoTi.text" destination="modelLocator.selectedUser.userDetails.phoneNo"/>
    <!--
         <mx:Binding source="emailTi.text"
         destination="modelLocator.selectedUser.userDetails.email.getItemAt(0).emailAddress"/>
    -->
    <mx:Binding source="skypeNameTi.text" destination="modelLocator.selectedUser.userDetails.skypeName"/>
    <mx:Binding source="departmentTi.text" destination="modelLocator.selectedUser.userDetails.department"/>
    <mx:Binding source="officeTi.text" destination="modelLocator.selectedUser.userDetails.office"/>
    <mx:Binding source="tiComment.text" destination="modelLocator.selectedUser.userDetails.comment"/>
    <mx:Binding source="sexRb.selection.value as UserDetails$SEX" destination="modelLocator.selectedUser.userDetails.sex"/>
    <mx:Binding source="enabledChk.selected" destination="modelLocator.selectedUser.enabled"/>
    <mx:Binding source="lockedChk.selected" destination="modelLocator.selectedUser.locked"/>
    
    <mx:DateFormatter id="dateFormatter" formatString="{ModelLocator.SIMPLE_DT_FORMAT}"/>
    <mx:DateValidator id="dateVal" source="{expirationDt}" property="selectedDate" inputFormat="{ModelLocator.SIMPLE_DT_FORMAT}"/>
    <mx:StringValidator id="stringVal" minLength="1" source="{usernameTi}" property="text"/>
    
    <mx:HBox width="95%" verticalAlign="middle" backgroundColor="#B6CFEF" x="10" y="10">
        <mx:Label text="User Settings" fontSize="24"/>
        <mx:VRule height="10"/>
        <mx:Button id="addUserBtn" buttonMode="true" mouseChildren="false" toolTip="Create a new User" icon="@Embed(source='/assets/images/User--plus.png')" click="dispatchEvent(new UserEvent(UserEvent.ADD_USER));"/>
        <mx:VRule height="10"/>
        <mx:Button id="deleteUserBtn" buttonMode="true" mouseChildren="false" toolTip="Delete an User" icon="@Embed(source='/assets/images/User--minus.png')" click="dispatchEvent(new UserEvent(UserEvent.DELETE_USER));"/>
        <mx:VRule height="10"/>
        <mx:Button id="saveUserBtn" buttonMode="true" mouseChildren="false" toolTip="Save an already existing User" icon="@Embed(source='/assets/images/User--save.png')" click="fireSaveUserEvent()"/>
        <mx:VRule height="10"/>
        <mx:Button id="refreshUserBtn" buttonMode="true" mouseChildren="false" toolTip="Refresh the list of Users" icon="@Embed(source='assets/images/icons/refresh.png')" click="refresh()"/>
        <mx:VRule height="10"/>
        <mx:Button id="changePasswordBtn" buttonMode="true" mouseChildren="false" toolTip="Change the current User Password" icon="@Embed(source='assets/images/icons/key--edit.png')" click="showChangePasswordDialog()"/>
        <mx:VRule height="10"/>
        <mx:Button id="changePictureBtn" buttonMode="true" mouseChildren="false" toolTip="Change the picture of the current User" icon="@Embed(source='assets/images/icons/picture--edit.png')" click="showFileUploadDialog()"/>
    </mx:HBox>
    <mx:HRule x="9" y="53" width="95%"/>
    <mx:Canvas x="10" y="63" width="95%" height="100%">
        <mx:Panel x="10" y="10" width="560" height="507" layout="absolute" title="Details">
            <mx:Form width="402" x="128" y="10" height="100%">

                <mx:FormItem label="Username" required="true" width="100%">
                    <mx:TextInput id="usernameTi" text="{modelLocator.selectedUser.username}" editable="false" click="setEditable(event)" width="250"/>
                </mx:FormItem>

                <mx:FormItem label="Fullname" required="false" width="100%">
                    <mx:TextInput id="fullnameTi" text="{modelLocator.selectedUser.fullname}" width="250"/>
                </mx:FormItem>

                <mx:FormItem label="Description" required="false" width="100%">
                    <mx:TextArea id="descriptionTi" text="{modelLocator.selectedUser.userDetails.description}" width="250"/>
                </mx:FormItem>

                <mx:FormItem label="Phone" required="false" width="100%">
                    <mx:TextInput id="phoneNoTi" text="{modelLocator.selectedUser.userDetails.phoneNo}" width="250"/>
                </mx:FormItem>
                <!--
                     <mx:FormItem label="Email" required="false"> <mx:TextInput id="emailTi"
                     text="{modelLocator.selectedUser.userDetails.email.getItemAt(0).emailAddress}" width="250" /> </mx:FormItem>
                -->
                <mx:FormItem label="Skype" required="false" width="100%">
                    <mx:TextInput id="skypeNameTi" text="{modelLocator.selectedUser.userDetails.skypeName}" width="250"/>
                </mx:FormItem>

                <mx:FormItem label="Department" required="false" width="100%">
                    <mx:TextInput id="departmentTi" text="{modelLocator.selectedUser.userDetails.department}" width="250"/>
                </mx:FormItem>

                <mx:FormItem label="Office" required="false" width="100%">
                    <mx:TextInput id="officeTi" text="{modelLocator.selectedUser.userDetails.office}" width="250"/>
                </mx:FormItem>

                <mx:FormItem label="Sex" width="100%">
                    <mx:Tile width="250" direction="vertical">
                        <mx:RadioButtonGroup id="sexRb" selectedValue="{modelLocator.selectedUser.userDetails.sex}"/>
                        <mx:RadioButton value="{UserDetails$SEX.MALE}" label="Male" group="{sexRb}"/>
                        <mx:RadioButton value="{UserDetails$SEX.FEMALE}" label="Female" group="{sexRb}"/>
                    </mx:Tile>
                </mx:FormItem>

                <mx:FormItem label="Comment" required="false" width="100%">
                    <mx:TextArea id="tiComment" text="{modelLocator.selectedUser.userDetails.comment}" width="250"/>
                </mx:FormItem>

                <mx:FormItem required="false" width="100%">
                    <mx:CheckBox id="enabledChk" label="Enabled" selected="{modelLocator.selectedUser.enabled}" />
                </mx:FormItem>

                <mx:FormItem required="false" width="100%">
                    <mx:CheckBox id="lockedChk" label="Locked" selected="{modelLocator.selectedUser.locked}"/>
                </mx:FormItem>

                <mx:FormItem label="Expires" required="false" width="100%">
                    <mx:DateField id="expirationDt" editable="true" formatString="{ModelLocator.SIMPLE_DT_FORMAT}" width="250" selectedDate="{modelLocator.selectedUser.expirationDate}"/>
                </mx:FormItem>

            </mx:Form>
            <mx:Image id="userImg" source="{modelLocator.selectedUser.userDetails.image}" width="100" height="150" click="showFileUploadDialog()" x="10" y="10" toolTip="Click to change the picture of the User" />
            <mx:VRule x="118" y="10" height="447"/>
        </mx:Panel>
        <mx:Panel x="578" y="10" width="100%" height="299" layout="absolute" title="Preferences">
            <mx:List width="95%" height="239" x="10" y="10"/>
        </mx:Panel>
        <mx:Panel x="578" y="317" width="100%" height="200" layout="absolute" title="Assigned Roles">
            <mx:List height="140" width="95%" x="10" y="10" dataProvider="{modelLocator.selectedUser.roles}"/>
        </mx:Panel>

    </mx:Canvas>
</mx:Canvas>
