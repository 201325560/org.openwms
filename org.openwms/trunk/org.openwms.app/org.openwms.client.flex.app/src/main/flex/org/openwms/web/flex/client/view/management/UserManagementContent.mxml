<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * openwms.org, the Open Warehouse Management System.
 *
 * This file is part of openwms.org.
 *
 * openwms.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * openwms.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software. If not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" styleName="frameContainerSkin" creationComplete="init()" implements="org.openwms.web.flex.client.IObserver">

    <mx:Metadata>
        [Name]
        [ManagedEvent(name="ADD_USER")]
        [ManagedEvent(name="SAVE_USER")]
        [ManagedEvent(name="DELETE_USER")]
        [ManagedEvent(name="LOAD_ALL_USERS")]
    </mx:Metadata>

    <mx:Script>
        <![CDATA[
            import mx.formatters.Formatter;
            import mx.utils.ObjectUtil;
            import mx.effects.Blur;
            import flash.utils.ByteArray;
            import mx.events.ValidationResultEvent;
            import mx.managers.PopUpManager;
            import mx.collections.ArrayCollection;
            import mx.controls.Alert;
            import mx.core.BitmapAsset;
            import mx.validators.RegExpValidationResult;
            import org.openwms.core.domain.system.usermanagement.User;
            import org.openwms.core.domain.system.usermanagement.UserDetails$SEX;
            import org.openwms.web.flex.client.event.UserEvent;
            import org.openwms.web.flex.client.util.UserHelper;
            import org.openwms.web.flex.client.model.ModelLocator;
            import org.openwms.web.flex.client.util.DisplayUtility;
            import org.openwms.web.flex.client.util.BindingProperty;
            import org.openwms.web.flex.client.util.ValidationUtil;
            import org.openwms.web.flex.client.view.dialogs.FileUploadDialog;
            import org.openwms.web.flex.client.view.dialogs.ChangePasswordDialog;

            [In]
            [Bindable]
            /**
             * Inject the model.
             */
            public var modelLocator : ModelLocator;

            [Bindable]
            [Embed(source="/assets/images/userDefaultUniSex.jpg")]
            private var uniSexImage : Class;
            [Bindable]
            [Embed(source="/assets/images/userDefaultMan.jpg")]
            private var manImage : Class;
            [Bindable]
            [Embed(source="/assets/images/userDefaultWoman.jpg")]
            private var womanImage : Class;
            private var filter : DropShadowFilter = new DropShadowFilter(6, 45, 0x202020, 0.5, 4, 4, 1, 2, false);

            [Observer("USER.SELECTION_CHANGED")]
            private function init() : void {
                trace("User selection changed in content");
                userImg.source = getUserImage();
                userImg.filters = [filter];
                if (modelLocator.selectedUser == null) {
                    setFormElements(false);
                } else {
                    setFormElements(true);
                }
            }
            
            private function setFormElements(value : Boolean = true) : void {
            trace("1");
                usernameTi.editable = value;
            trace("1");
                fullnameTi.editable = value;
            trace("1");
                descriptionTi.editable = value;
            trace("1");
                phoneNoTi.editable = value;
            trace("1");
                skypeNameTi.editable = value;
            trace("1");
                departmentTi.editable = value;
            trace("1");
                officeTi.editable = value;
            trace("1");
                tiComment.editable = value;
            trace("1");
                enabledChk.enabled = value;
            trace("1");
                lockedChk.enabled = value;
            trace("1");
            }

            /**
             * Callback method. To be called when a new user image was saved.
             */
            public function notify() : void {
                refresh();
            }

            private function showFileUploadDialog() : void {
                if (modelLocator.selectedUser == null) {
                    Alert.show("Select an User first");
                    return;
                }
                if (isNaN(modelLocator.selectedUser.id)) {
                    Alert.show("Please save the User first to add an image");
                    return;
                }
                var pop1 : FileUploadDialog = FileUploadDialog(PopUpManager.createPopUp(this, FileUploadDialog, true));
                pop1.callback = this;
                PopUpManager.centerPopUp(pop1);
            }

            /**
             * Fire an event to reload all users.
             */
            private function refresh() : void {
                dispatchEvent(new UserEvent(UserEvent.LOAD_ALL_USERS));
            }

            private function fireSaveUserEvent() : void {
            trace("Selected is "+sexRb.selection.value);
                if (modelLocator.selectedUser != null && stringVal.validate().type == ValidationResultEvent.VALID && checkExpirationDate()) {
                    var bindings:Array = [new BindingProperty(modelLocator.selectedUser, "username", usernameTi, "text"),
                                          new BindingProperty(modelLocator.selectedUser, "fullname", fullnameTi, "text"),  
                                          new BindingProperty(modelLocator.selectedUser.userDetails, "description", descriptionTi, "text"),  
                                          new BindingProperty(modelLocator.selectedUser.userDetails, "phoneNo", phoneNoTi, "text"),
                                          new BindingProperty(modelLocator.selectedUser.userDetails, "skypeName", skypeNameTi, "text"),
                                          new BindingProperty(modelLocator.selectedUser.userDetails, "department", departmentTi, "text"),
                                          new BindingProperty(modelLocator.selectedUser.userDetails, "office", officeTi, "text"),
                                          new BindingProperty(modelLocator.selectedUser.userDetails, "comment", tiComment, "text"),
                                          new BindingProperty(modelLocator.selectedUser, "enabled", enabledChk, "selected"),
                                          new BindingProperty(modelLocator.selectedUser, "locked", lockedChk, "selected")];
                    DisplayUtility.bindProperties(new ArrayCollection(bindings), function execute():void {
                            dispatchEvent(new UserEvent(UserEvent.SAVE_USER))});
                }
            }

            private function checkExpirationDate() : Boolean {
                if (expirationDateDt == null || expirationDateDt.selectedDate == null) {
                	if (modelLocator.selectedUser != null) {
                        modelLocator.selectedUser.expirationDate = null;
                    }
                    return true;
                }
                if (modelLocator.selectedUser != null && 
                    ValidationUtil.validateAndFormat(expirationDateDt, dateVal) &&
                    ObjectUtil.dateCompare(ModelLocator.today(), expirationDateDt.selectedDate) < 1) {
                        modelLocator.selectedUser.expirationDate = expirationDateDt.selectedDate;
                        return true;
                }
                Alert.show("Please enter a valid expiration date");
                return false;
            }

            private function showChangePasswordDialog() : void {
                var pop : ChangePasswordDialog = ChangePasswordDialog(PopUpManager.createPopUp(this, ChangePasswordDialog, true));
                PopUpManager.centerPopUp(pop);
            }

            private function setEditable(event : Event) : void {
                event.currentTarget.editable = true;
            }

            private function getUserImage() : BitmapAsset {
                var asset : BitmapAsset;
                if (modelLocator.selectedUser != null) {
                    var user : User = modelLocator.selectedUser;
                    if (UserHelper.hasDetails(user)) {
                        if (user.userDetails.sex == UserDetails$SEX.MALE) {
                            asset = new manImage() as BitmapAsset;
                        } else if (user.userDetails.sex == UserDetails$SEX.FEMALE) {
                            asset = new womanImage() as BitmapAsset;
                        } else {
                            asset = new uniSexImage() as BitmapAsset;
                        }
                    } else {
                        asset = new uniSexImage() as BitmapAsset;
                    }
                } else {
                    asset = new uniSexImage() as BitmapAsset;
                }
                return asset;
            }
        ]]>
    </mx:Script>
<!-- 
    <mx:Binding source="usernameTi.text" destination="modelLocator.selectedUser.username"/>
    <mx:Binding source="fullnameTi.text" destination="modelLocator.selectedUser.fullname"/>
    <mx:Binding source="descriptionTi.text" destination="modelLocator.selectedUser.userDetails.description"/>
    <mx:Binding source="phoneNoTi.text" destination="modelLocator.selectedUser.userDetails.phoneNo"/>
    <mx:Binding source="skypeNameTi.text" destination="modelLocator.selectedUser.userDetails.skypeName"/>
    <mx:Binding source="departmentTi.text" destination="modelLocator.selectedUser.userDetails.department"/>
    <mx:Binding source="officeTi.text" destination="modelLocator.selectedUser.userDetails.office"/>
    <mx:Binding source="tiComment.text" destination="modelLocator.selectedUser.userDetails.comment"/>
    <mx:Binding source="enabledChk.selected" destination="modelLocator.selectedUser.enabled"/>
    <mx:Binding source="lockedChk.selected" destination="modelLocator.selectedUser.locked"/>
 -->
    <mx:Binding source="sexRb.selection.value as UserDetails$SEX" destination="modelLocator.selectedUser.userDetails.sex"/>
    <mx:DateValidator id="dateVal" property="selectedDate" inputFormat="{ModelLocator.SIMPLE_DT_FORMAT}"/>
    <mx:StringValidator id="stringVal" minLength="1" source="{usernameTi}" property="text"/>

    <mx:HBox width="95%" verticalAlign="middle" backgroundColor="#B6CFEF" x="10" y="10">
        <mx:Label text="User Settings" fontSize="24"/>
        <mx:VRule height="10"/>
        <mx:Button id="addUserBtn" buttonMode="true" mouseChildren="false" toolTip="Create a new User" icon="@Embed(source='/assets/images/User--plus.png')" click="dispatchEvent(new UserEvent(UserEvent.ADD_USER));"/>
        <mx:VRule height="10"/>
        <mx:Button id="deleteUserBtn" buttonMode="true" mouseChildren="false" toolTip="Delete an User" icon="@Embed(source='/assets/images/User--minus.png')" click="dispatchEvent(new UserEvent(UserEvent.DELETE_USER));"/>
        <mx:VRule height="10"/>
        <mx:Button id="saveUserBtn" buttonMode="true" mouseChildren="false" toolTip="Save an already existing User" icon="@Embed(source='/assets/images/User--save.png')" click="fireSaveUserEvent()"/>
        <mx:VRule height="10"/>
        <mx:Button id="refreshUserBtn" buttonMode="true" mouseChildren="false" toolTip="Refresh the list of Users" icon="@Embed(source='assets/images/icons/refresh.png')" click="refresh()"/>
        <mx:VRule height="10"/>
        <mx:Button id="changePasswordBtn" buttonMode="true" mouseChildren="false" toolTip="Change the current User Password" icon="@Embed(source='assets/images/icons/key--edit.png')" click="showChangePasswordDialog()"/>
        <mx:VRule height="10"/>
        <mx:Button id="changePictureBtn" buttonMode="true" mouseChildren="false" toolTip="Change the picture of the current User" icon="@Embed(source='assets/images/icons/picture--edit.png')" click="showFileUploadDialog()"/>
    </mx:HBox>
    <mx:HRule x="9" y="53" width="95%"/>
    <mx:Canvas x="10" y="63" width="95%" height="100%">
        <mx:Panel x="10" y="10" width="560" height="507" layout="absolute" title="Details">
            <mx:Accordion width="402" height="447" x="128" y="10">
                <mx:Canvas label="User" width="100%" height="100%">
                    <mx:Form>
                        <mx:FormItem label="Username" required="true" width="100%">
                            <mx:TextInput id="usernameTi" text="{modelLocator.selectedUser.username}" editable="false" click="setEditable(event)" width="250"/>
                        </mx:FormItem>
                        <mx:FormItem label="Fullname" required="false" width="100%" y="30">
                            <mx:TextInput id="fullnameTi" text="{modelLocator.selectedUser.fullname}" width="250"/>
                        </mx:FormItem>
                        <mx:FormItem label="Description" required="false" width="100%" y="60">
                            <mx:TextArea id="descriptionTi" text="{modelLocator.selectedUser.userDetails.description}" width="250"/>
                        </mx:FormItem>
                    </mx:Form>
                </mx:Canvas>
                <mx:Canvas label="User Details" width="100%" height="100%">
                    <mx:Form>
                        <mx:FormItem label="Phone" required="false" width="100%">
                            <mx:TextInput id="phoneNoTi" text="{modelLocator.selectedUser.userDetails.phoneNo}" width="250"/>
                        </mx:FormItem>
                        <mx:FormItem label="Skype" required="false" width="100%" y="30">
                            <mx:TextInput id="skypeNameTi" text="{modelLocator.selectedUser.userDetails.skypeName}" width="250"/>
                        </mx:FormItem>
                        <mx:FormItem label="Department" required="false" width="100%" y="60">
                            <mx:TextInput id="departmentTi" text="{modelLocator.selectedUser.userDetails.department}" width="250"/>
                        </mx:FormItem>
                        <mx:FormItem label="Office" required="false" width="100%" y="90">
                            <mx:TextInput id="officeTi" text="{modelLocator.selectedUser.userDetails.office}" width="250"/>
                        </mx:FormItem>
                        <mx:FormItem label="Sex" width="100%" y="120">
                            <mx:Tile width="250" direction="vertical">
                                <mx:RadioButtonGroup id="sexRb" selectedValue="{modelLocator.selectedUser.userDetails.sex}"/>
                                <mx:RadioButton value="{UserDetails$SEX.MALE}" label="Male" group="{sexRb}"/>
                                <mx:RadioButton value="{UserDetails$SEX.FEMALE}" label="Female" group="{sexRb}"/>
                            </mx:Tile>
                        </mx:FormItem>
                        <mx:FormItem label="Comment" required="false" width="100%" y="180">
                            <mx:TextArea id="tiComment" text="{modelLocator.selectedUser.userDetails.comment}" width="250"/>
                        </mx:FormItem>
                        <mx:FormItem required="false" width="100%" y="240">
                            <mx:CheckBox id="enabledChk" label="Enabled" selected="{modelLocator.selectedUser.enabled}"/>
                        </mx:FormItem>
                        <mx:FormItem required="false" width="100%" y="270">
                            <mx:CheckBox id="lockedChk" label="Locked" selected="{modelLocator.selectedUser.locked}"/>
                        </mx:FormItem>
                        <mx:FormItem label="Expiration Date" required="false" width="100%" y="300">
                            <mx:DateField id="expirationDateDt" editable="true" selectableRange="{{rangeStart : new Date()}}" formatString="{ModelLocator.SIMPLE_DT_FORMAT}" width="250" selectedDate="{modelLocator.selectedUser == null ? null : modelLocator.selectedUser.expirationDate}"/>
                        </mx:FormItem>
                    </mx:Form>
                </mx:Canvas>
                <mx:Canvas label="Assigned Roles" width="100%" height="100%">
                    <mx:List x="10" y="10" width="380" height="363" alternatingItemColors="[#EEEEEE, #FFFFFF]" dataProvider="{modelLocator.selectedUser.roles}"/>
                </mx:Canvas>
            </mx:Accordion>
            <mx:Image id="userImg" source="{modelLocator.selectedUser.userDetails.image}" width="100" height="150" click="showFileUploadDialog()" x="10" y="10" toolTip="Click to change the picture of the User"/>
            <mx:VRule x="118" y="10" height="447"/>
        </mx:Panel>

    </mx:Canvas>
</mx:Canvas>
