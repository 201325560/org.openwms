<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * openwms.org, the Open Warehouse Management System.
 *
 * This file is part of openwms.org.
 *
 * openwms.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as 
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * openwms.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software. If not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
-->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="400" height="250" title="Create Role" backgroundColor="#F1F07C" creationComplete="init();">

    <mx:Metadata>
        [Name("createRoleDialog")]
        [ManagedEvent(name="ADD_ROLE")]
        [ManagedEvent(name="SAVE_ROLE")]
    </mx:Metadata>

    <mx:Script>
    	<![CDATA[
    		import mx.binding.utils.BindingUtils;
    		import mx.controls.Alert;
    		import mx.events.ValidationResultEvent;
    		import org.openwms.core.domain.system.usermanagement.Role;
    		import org.openwms.web.flex.client.event.RoleEvent;
            import org.openwms.web.flex.client.model.ModelLocator;

            import mx.managers.PopUpManager;
            import flash.events.KeyboardEvent;
            
            [Inject]
            [Bindable]
            /**
             * Inject the model.
             */
            public var modelLocator:ModelLocator;
            
            [Bindable]
            /**
             * Use this dialogue to edit an existing Role and pass in the Role to change.
             */
            public var roleToChange:Role;
            
            private function init():void {
            	if (roleToChange != null) {
            		createBtn.label = "Save";
            		nameTxt.text = roleToChange.name;
            		descriptionTxt.text = roleToChange.description;
            	}
                nameTxt.setFocus();
                this.addEventListener(KeyboardEvent.KEY_DOWN, keyEventHandler);
                PopUpManager.centerPopUp(this);
            }

            private function submit():void {
            	if (stringVal.validate().type == ValidationResultEvent.VALID) {
            		var event:RoleEvent;
            		if (roleToChange == null) {
                        event = new RoleEvent(RoleEvent.ADD_ROLE);
                        var role:Role = new Role(formatRoleName(nameTxt.text), descriptionTxt.text);
                        event.data = role;
                        dispatchEvent(event);
                    }
                    else {
                        nameTxt.text = formatRoleName(nameTxt.text);
                        BindingUtils.bindProperty(roleToChange, "name", nameTxt, "text");
                        BindingUtils.bindProperty(roleToChange, "description", descriptionTxt, "text");
                        event = new RoleEvent(RoleEvent.SAVE_ROLE);
                        event.data = roleToChange;
                        dispatchEvent(event);
                        closeDialog();
                    }
                }
                nameTxt.setFocus();
            }
            
            private function formatRoleName(roleName:String):String {
            	var result:String = roleName.toUpperCase();
            	if (result.substring(0,5) != "ROLE_") {
            		result = "ROLE_"+result;
            	}
            	return result;
            }

            private function closeDialog(event:Event=null):void {
                this.removeEventListener(KeyboardEvent.KEY_DOWN, keyEventHandler);
                PopUpManager.removePopUp(this);
            }

            private function keyEventHandler(event:KeyboardEvent):void {
                if(event.keyCode == 27) {
                   closeDialog(event);
                }
            }
            
            /**
             * When a Role was successfully added reset the form to add a new Role.
             * 
             * @param event unused
             */
            [Observer("ROLE_ADDED")]
            public function onRoleAdded(event:RoleEvent):void {
            	nameTxt.text = "";
            	descriptionTxt.text = "";
            	nameTxt.setFocus();
            }
    	]]>
    </mx:Script>
    
    <mx:StringValidator id="stringVal" minLength="1" source="{nameTxt}" property="text"/>
    
	<mx:Label x="10" y="10" text="Role" fontSize="22" width="140" textAlign="right"/>
    <mx:TextInput id="nameTxt" width="200" fontSize="22" x="158" y="8" />

	<mx:Label x="10" y="51" text="Description" fontSize="22" width="140" textAlign="right"/>
    <mx:TextArea id="descriptionTxt" x="158" y="50" width="200" height="73" fontSize="22" />

	<mx:HBox x="0" y="175" width="100%" horizontalAlign="center">
		<mx:Button id="createBtn" label="Create" fontSize="12" click="submit()"/>
		<mx:Button id="cancelBtn" label="Cancel" fontSize="12" click="closeDialog(event)"/>
	</mx:HBox>
	
</mx:TitleWindow>
