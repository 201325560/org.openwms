<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * openwms.org, the Open Warehouse Management System.
 *
 * This file is part of openwms.org.
 *
 * openwms.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as 
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * openwms.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software. If not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
-->
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="242" title="{I18nUtil.trans(I18nUtil.APP_MAIN, 'txt_change_password_title')}" fontSize="12" show="onShow();" creationComplete="onShow();">

    <mx:Metadata>
        [Name]
        [ManagedEvent(name = "CHANGE_USER_PASSWORD")]
        [ResourceBundle("appMain")]
    </mx:Metadata>

    <mx:Script>
    	<![CDATA[
    		import mx.managers.PopUpManager;
    		import mx.controls.Alert;
            
    		import org.openwms.web.flex.client.event.UserEvent;
    		import org.openwms.web.flex.client.model.ModelLocator;
    		import org.openwms.core.domain.system.usermanagement.User;
            import org.openwms.web.flex.client.util.I18nUtil;
    		
    		[Inject]
            [Bindable]
            /**
             * Injected Model.
             */
            public var modelLocator : ModelLocator;
    		
    		private function onShow() : void {
                newPasswordTxt.setFocus();
                this.addEventListener(KeyboardEvent.KEY_DOWN, keyEventHandler);
                PopUpManager.centerPopUp(this);
            }
            
    		private function change() : void {
    			if (newPasswordTxt.text == retypePasswordTxt.text) {
                    var event : UserEvent = new UserEvent(UserEvent.CHANGE_USER_PASSWORD);
                    event.data = {user : modelLocator.selectedUser, password : newPasswordTxt.text};
                    dispatchEvent(event);
                    closeDialog();
    			}
                Alert.show(I18nUtil.trans(I18nUtil.APP_MAIN, "info_change_password_wrong"));
    		}
    		
    		private function closeDialog(event : Event = null) : void {
                this.removeEventListener(KeyboardEvent.KEY_DOWN, keyEventHandler);
                PopUpManager.removePopUp(this);
            }

            private function keyEventHandler(event : KeyboardEvent) : void {
                if(event.keyCode == 27) {
                   closeDialog(event);
                }
            }
    	]]>
    </mx:Script>

	<mx:Canvas width="100%" height="100%">
        <mx:Label x="10" y="20" text="{I18nUtil.trans(I18nUtil.APP_MAIN, 'txt_change_password_header')}" fontSize="14"/>
        <mx:HRule x="10" y="51" width="360"/>
		<mx:Label x="10" y="79" text="{I18nUtil.trans(I18nUtil.APP_MAIN, 'txt_change_password_password1')}" fontSize="14"/>
        <mx:TextInput id="newPasswordTxt" x="176" y="77" width="180" fontSize="14" displayAsPassword="true" enter="retypePasswordTxt.setFocus();"/>
		<mx:Label x="10" y="110" text="{I18nUtil.trans(I18nUtil.APP_MAIN, 'txt_change_password_password2')}" fontSize="14"/>
        <mx:TextInput id="retypePasswordTxt" x="176" y="108" width="180" fontSize="14" displayAsPassword="true" enter="changeBtn.setFocus();"/>
		<mx:HBox x="0" y="159" width="100%" horizontalAlign="center">
			<mx:Button id="changeBtn" label="{I18nUtil.trans(I18nUtil.APP_MAIN, 'btn_change')}" fontSize="12" click="change();"/>
			<mx:Button id="cancelBtn" label="{I18nUtil.trans(I18nUtil.APP_MAIN, 'btn_cancel')}" fontSize="12" click="closeDialog(event);"/>
		</mx:HBox>
	</mx:Canvas>
	
</mx:Panel>
