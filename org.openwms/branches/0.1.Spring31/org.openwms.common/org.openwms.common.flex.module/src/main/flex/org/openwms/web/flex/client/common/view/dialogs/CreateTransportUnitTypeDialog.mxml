<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * openwms.org, the Open Warehouse Management System.
 *
 * This file is part of openwms.org.
 *
 * openwms.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as 
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * openwms.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software. If not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
-->
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" width="540" height="452" title="Create Transport Unit Type" fontSize="12" creationComplete="init();">
	
    <mx:Metadata>
        [Name]
        [ManagedEvent(name="CREATE_TRANSPORT_UNIT_TYPE")]
    </mx:Metadata>

	<mx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import org.openwms.web.flex.client.util.ValidationUtil;
			import org.openwms.web.flex.client.common.event.TransportUnitTypeEvent;
			import org.openwms.common.domain.TransportUnitType;
			import mx.managers.PopUpManager;
			import flash.events.KeyboardEvent;
			
			private function init():void {
				typeTxt.setFocus();
                this.addEventListener(KeyboardEvent.KEY_DOWN, keyEventHandler);
                PopUpManager.centerPopUp(this);
			}

            private function closeDialog(event:Event = null):void {
                this.removeEventListener(KeyboardEvent.KEY_DOWN, keyEventHandler);
                PopUpManager.removePopUp(this);
            }
            
            private function createTransportUnitType():void {
                if (ValidationUtil.validateAndFormat(lengthTxt, numberVal) &&
                    ValidationUtil.validateAndFormat(widthTxt, numberVal) &&
                    ValidationUtil.validateAndFormat(heightTxt, numberVal) &&
                    ValidationUtil.validateAndFormat(weightTareTxt, doubleVal, numberFmt) &&
                    ValidationUtil.validateAndFormat(weightMaxTxt, doubleVal, numberFmt) &&
                    stringVal.validate().type == ValidationResultEvent.VALID) {

	            	var event:TransportUnitTypeEvent = new TransportUnitTypeEvent(TransportUnitTypeEvent.CREATE_TRANSPORT_UNIT_TYPE);
	            	var transportUnitType:TransportUnitType = new TransportUnitType();
	            	transportUnitType.type = typeTxt.text;
	            	transportUnitType.length = int(lengthTxt.text);
	            	transportUnitType.width = int(widthTxt.text);
	            	transportUnitType.height = int(heightTxt.text);
	            	transportUnitType.weightTare = Number(weightTareTxt.text);
	            	transportUnitType.weightMax = Number(weightMaxTxt.text);
	            	transportUnitType.description = descriptionTxt.text;
	            	
	            	event.data = transportUnitType;
	            	dispatchEvent(event);
	            	closeDialog();
                    }
            }

	        private function keyEventHandler(event:KeyboardEvent):void {
                if(event.keyCode == 27) {
                   closeDialog(event);
                   return;
                }
            }
            
	]]>
	</mx:Script>

    <mx:NumberFormatter id="numberFmt" precision="2"/>
    <mx:NumberValidator id="numberVal" property="text"/>
    <mx:NumberValidator id="doubleVal" property="text" precision="2"/>
    <mx:StringValidator id="stringVal" minLength="1" source="{typeTxt}" property="text"/>

	<mx:Canvas width="100%" height="100%" backgroundColor="#F1F07C">
		<mx:Label x="158" y="10" text="Type" fontSize="22" fontWeight="bold"/>
        <mx:TextInput id="typeTxt" x="230" y="8" fontSize="22" width="280"/>

		<mx:Label x="141" y="51" text="Length" fontSize="22"/>
        <mx:TextInput id="lengthTxt" x="230" y="49" fontSize="22" width="280"/>

		<mx:Label x="152" y="92" text="Width" fontSize="22"/>
        <mx:TextInput id="widthTxt" x="230" y="90" fontSize="22" width="280"/>

		<mx:Label x="144" y="133" text="Height" fontSize="22"/>
        <mx:TextInput id="heightTxt" x="230" y="131" fontSize="22" width="280"/>

		<mx:Label x="82" y="174" text="Weight Tare" fontSize="22"/>
        <mx:TextInput id="weightTareTxt" x="230" y="172" fontSize="22" width="280"/>

		<mx:Label x="24" y="215" text="Maximum Weight" fontSize="22"/>
		<mx:TextInput id="weightMaxTxt" x="230" y="213" fontSize="22" width="280"/>

		<mx:Label x="94" y="259" text="Description" fontSize="22"/>
		<mx:TextArea id="descriptionTxt" x="230" y="258" width="280" height="73" fontSize="22"/>
		<mx:HBox x="0" y="374" width="100%" horizontalAlign="center">
			<mx:Button id="createBtn" label="Create" fontSize="12" click="createTransportUnitType()"/>
			<mx:Button id="cancelBtn" label="Cancel" fontSize="12" click="closeDialog(event)"/>
		</mx:HBox>
	</mx:Canvas>
</mx:Panel>
